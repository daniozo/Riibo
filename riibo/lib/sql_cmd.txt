CREATE TABLE Users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    full_name VARCHAR(100),
    phone_number VARCHAR(15),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    role ENUM('user', 'admin') DEFAULT 'user',
    status ENUM('active', 'inactive', 'banned') DEFAULT 'active'
);



CREATE TABLE Business (
    business_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    address VARCHAR(255),
    coordinates POINT NOT NULL,
    contact_phone VARCHAR(20),
    contact_email VARCHAR(255),
    logo_url VARCHAR(255),
    opening_hours TIME,
    closing_hours TIME,
    business_type VARCHAR(50) NOT NULL,
    SPATIAL INDEX(coordinates),
    CONSTRAINT chk_business_type CHECK (business_type IN ('Restaurant', 'Supermarché', 'Boulangerie & pâtisserie', 'Fast food', 'Épicerie'))
);




CREATE TABLE Articles (
    article_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    initial_price DECIMAL(10, 2) NOT NULL,
    sale_price DECIMAL(10, 2),
    quantity INT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    available_until DATETIME,
    status ENUM('disponible', 'vendu', 'expiré') NOT NULL,
    images JSON,
    business_id INT NOT NULL,
    business_name VARCHAR(255) NOT NULL,
    coordinates POINT NOT NULL,
    FOREIGN KEY (business_id) REFERENCES Business(business_id),
    FOREIGN KEY (coordinates) REFERENCES Business(coordinates)
);



CREATE TABLE favorites (
    favorite_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    article_or_business_id INT NOT NULL,
    favorite_type ENUM('commerce', 'article') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (article_or_business_id) REFERENCES Articles(article_id) ON DELETE CASCADE,
    FOREIGN KEY (article_or_business_id) REFERENCES Business(business_id) ON DELETE CASCADE
);